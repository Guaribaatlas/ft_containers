                                 [95mvector[0m

                                       iterator:
4
8
7
size: 8
42
42
42
42
4
5
6
7
size: 8
42
-2
-2
-2
-2
-2
-2
-2
1
0
1
1
1
0
0
0
1
0
0
1
1

                               reverse_iterator:
4
-8
size: 8
0
1
2
3
42
42
42
42
size: 8
-2
-2
-2
-2
-2
-2
-2
42
1
0
1
1
1
0
0
0
1
0
0
1
1

                                          clear:
size: 2
0
1
size: 0
size: 8
0
1
2
3
4
5
6
7
size: 0

                                   constructor: 
size: 0
size: 0
size: 12
19
19
19
19
19
19
19
19
19
19
19
19
size: 12
0
1
2
3
4
5
6
7
8
9
10
11
size: 12
0
1
2
3
4
5
6
7
8
9
10
11

               capacity/max_size/empty/reserve: 
4611686018427387903
2
1
4611686018427387903
16
0
16
16
0

                                         access:
0
1
2
vector
0
1
2
0
2
1
1

                                       operator:

assignation operator:
size: 5
99
99
99
99
99
aa

 compare operator:
0
1
1
1
0
0
0
1
0
0
1
1
0
1
0
0
1
1
0
1
1
1
0
0
0
1
0
0
1
1
0
1
1
1
0
0
0
0
aa

                                 erase: (size = 12)

        erase_one:
size: 12
0
1
2
3
4
5
6
7
8
9
10
11
size: 6
1
3
5
7
9
11

         erase_it:
size: 12
0
1
2
3
4
5
6
7
8
9
10
11
size: 2
0
11
size: 2
0
11
size: 1
0
size: 0

                                assign: (size = 19)
size: 19
42
42
42
42
42
42
42
42
42
42
42
42
42
42
42
42
42
42
42
size: 5
a0
a1
a2
a3
a4
size: 19
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

                                insert: (size = 12)

       one_insert:
size: 12
12
12
12
12
12
12
12
12
12
12
12
12

        it_insert:
size: 12
0
1
2
3
4
5
6
7
8
9
10
11

     count_insert:
size: 1
9
size: 13
12
12
12
12
12
12
12
12
12
12
12
12
9

                               insert2: (size = 12 )

       one_insert:
size: 12
0
0
0
0
0
0
0
0
0
0
0
0

     count_insert:
size: 1
0
size: 13
0
0
0
0
0
0
0
0
0
0
0
0
0

        it_insert:
size: 12
0
0
0
0
0
0
0
0
0
0
0
0

                                  push/pop back:
size: 0
size: 0

                                resize: (size = 9)
size: 9
19
19
19
19
19
19
19
19
19
size: 11
19
19
19
19
19
19
19
19
19
0
0
size: 0
size: 3
0
0
0
                                  [95mstack[0m

                                       push/pop:
size: 6
10
8
6
4
2
0
size: 0

                                    constructor:
size: 2


size: 8
42
36
30
24
18
12
6
0

                                          empty:
1
0
1

                                       operator:

assignation operator:
size: 1
99

 compare operator:
0
1
1
1
0
0
0
1
0
0
1
1
0
1
0
0
1
1
0
1
1
1
0
0
                                    [95mmap[0m

                           empty/size/max_size: 
0
461168601842738790
0
461168601842738790
0
1
0

                                       operator:

assignation operator:
size: 2
9 . 9
99 . 99
size: 2
9 . 9
99 . 99

 compare operator:
1
0
0
1
0
1
1
0
0
1
0
1
0
1
1
1
0
0
0
1
0
0
1
1
0
1
0
0
1
1
0
1
1
1
0
0
0
1
0
0
1
1
0
1
1
1
0
0

                                          clear:
size: 2
0 . 0
1 . 1
size: 0
size: 8
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
size: 0

                                 erase: (size = 12)

        it_insert:
size: 0
size: 1
0 . 0
size: 12
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11

      hint_insert:
size: 1
0 . 0
size: 12
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11
size: 12
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11

     value_insert:
size: 1
0 . 0
size: 6
0 . 0
2 . 2
4 . 4
6 . 6
8 . 8
10 . 10
size: 12
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11

                                 erase: (size = 12)

     one_it_erase:
size: 12
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11
size: 11
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11
size: 10
1 . 1
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11
size: 9
1 . 1
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
size: 4
7 . 7
8 . 8
9 . 9
10 . 10

         it_erase:
size: 12
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11
size: 10
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11
size: 10
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11
size: 9
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
size: 0

      value_erase:
size: 12
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
11 . 11
size: 11
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
6 . 6
7 . 7
8 . 8
9 . 9
10 . 10
size: 10
0 . 0
1 . 1
2 . 2
3 . 3
4 . 4
5 . 5
7 . 7
8 . 8
9 . 9
10 . 10
size: 9
0 . 0
2 . 2
3 . 3
4 . 4
5 . 5
7 . 7
8 . 8
9 . 9
10 . 10
size: 5
5 . 5
7 . 7
8 . 8
9 . 9
10 . 10

                            find_count: (size = -1)
7 . 7
1
1 . 1
1
4 . 4
1
0 . 0
1

                           range_bound: (size = -1)
4 . 4
5 . 5
4 . 4
5 . 5
6 . 6
2 . 2

                                        compare:

                                 erase: (size = 12)

        it_insert:
size: 0
size: 1
0 . 0
size: 12
11 . 11
10 . 10
9 . 9
8 . 8
7 . 7
6 . 6
5 . 5
4 . 4
3 . 3
2 . 2
1 . 1
0 . 0

      hint_insert:
size: 1
0 . 0
size: 12
11 . 11
10 . 10
9 . 9
8 . 8
7 . 7
6 . 6
5 . 5
4 . 4
3 . 3
2 . 2
1 . 1
0 . 0
size: 12
11 . 11
10 . 10
9 . 9
8 . 8
7 . 7
6 . 6
5 . 5
4 . 4
3 . 3
2 . 2
1 . 1
0 . 0

     value_insert:
size: 1
0 . 0
size: 6
10 . 10
8 . 8
6 . 6
4 . 4
2 . 2
0 . 0
size: 12
11 . 11
10 . 10
9 . 9
8 . 8
7 . 7
6 . 6
5 . 5
4 . 4
3 . 3
2 . 2
1 . 1
0 . 0
